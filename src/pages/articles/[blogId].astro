---
import Layout from "../../layouts/Layout.astro";
import Header from "../../components/Header.astro";
import Footer from "../../components/Footer.astro";
import BackButton from "../../components/shared/BackButton.astro";
import { getBlogs, getBlogDetail } from "../../library/microcms";
import { highlightMarkdown } from "../../utils/highlightMarkdown";
import { marked } from "marked";
// codeのsyntax highlightのthemeを変えたいときは以下を変更(demo: https://highlightjs.org/static/demo/)
import 'highlight.js/styles/vs2015.css'
import '../../styles/blog_page_style.css'

// 詳細記事ページの全パスを取得
export async function getStaticPaths() {
  const response = await getBlogs({ fields: ["id"] });
  return response.contents.map((content: any) => ({
    params: {
      blogId: content.id
    }
  }));
}

// 記事の詳細情報を取得
const { blogId } = Astro.params;
const blog = await getBlogDetail(blogId as string);

// microCMSのblogAPIから取得した記事本文にhighlightを当てる
const html = highlightMarkdown(blog.content)

const categories = blog.category
---

<Layout title={blog.title}>
  <Header title='Deep in Deep' />
  <main>
    <BackButton href="/" />
    <h1 class="title">{blog.title}</h1>
    <div class="info">
      <div class="category">
        {categories.map((category) => (
          <p>{category}</p>
        ))}
      </div>
      <div class="published-at">
        <p>公開日 : {new Date(blog.publishedAt).toLocaleDateString('ja-JP')}</p>
      </div>
    </div>
    <div class="post" set:html={html}></div>
  </main>
  <Footer />
</Layout>

<style>
  main {
    margin: auto;
    padding: 1em;
    width: 60%;
    min-height: 70.2vh;
  }
  @media screen and (max-width: 480px) {
    main {
      width: 90%;
      padding: 0;
    }
  }
  main h1 {
    border-left: 10px solid green;
    padding-left: 12px;
  }
  @media screen and (max-width: 480px) {
    main h1 {
      font-size: 26px;
    }
  }
  .info {
    display: flex;
    justify-content: space-between;
  }
  .category p {
    margin-right: 1em;
    padding: 4px 12px;
    border-radius: 10px;
    background-color: #ccc;
  }
  .published-at p {
    padding: 4px 12px;
  }
</style>
